---
- hosts: localhost
  vars_files: 
    - define-deployment-variables.yml
    - opnstack_authfile.yml
  become: true
  vars:
    rpserver: "{{ reverseproxy-server-name }}"
  debug: msg=rpserver
#  roles: 
#    - { role: create-nova-vm, vnm: "{{ db_servers.name }}", vimage: "{{ db_servers.image }}", 
#        vkeyname: "{{ db_servers.keyname }}", vflavor: "{{ db_servers.flavor }}",
#         vnetid: "{{ db_servers.netid }}", vsecurity_group: "{{ db_servers.security_group }}",
#         vservers_role: "{{ db_servers.server_role}}" }
#    - { role: create-nova-vm, vnm: "{{ app_servers.name }}", vimage: "{{ app_servers.image }}", 
#        vkeyname: "{{ app_servers.keyname }}", vflavor: "{{ app_servers.flavor }}",
#         vnetid: "{{ app_servers.netid }}", vsecurity_group: "{{ app_servers.security_group }}",
#         vservers_role: "{{ app_servers.server_role}}" }
#              
#
#- hosts: groupofjustcreatedvm
#  vars_files: 
#    - define-deployment-variables.yml
#  remote_user: cloudy
#  become: true
#  roles:
##    - apply-common-config
#    - { role: configure-db-mysql, when: "server_role == 'dbserver'" }
##    - { role: configure-webserver-apache, when: "server_role == 'appserver'" }
#  environment: "{{ proxy_env }}"


- hosts: rpserver
  vars_files: 
    - define-deployment-variables.yml    
  become: true
  roles:
    - configure-reverse-proxy

    
 ###########################################################  
  
#  tasks:
#    - name: show the servers role 
#      debug: msg={{hostvars[inventory_hostname].server_role}}    
  