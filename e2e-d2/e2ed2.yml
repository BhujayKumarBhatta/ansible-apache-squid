---
- hosts: localhost
  vars_files: 
    - define-deployment-variables.yml
    - opnstack_authfile.yml
  become: true
   
  roles:
#    - { role: create-network, network_name: "{{net1_network_name}}", 
#         is_the_network_shared_between_customers: "{{net1_is_the_network_shared_between_customers}}" , 
#        accessable_outside_openstack_virtual_network: "{{net1_accessable_outside_openstack_virtual_network}}" }        
#    - { role: create-network, network_name: "{{net2_network_name}}", 
#         is_the_network_shared_between_customers: "{{net2_is_the_network_shared_between_customers}}" , 
#        accessable_outside_openstack_virtual_network: "{{net2_accessable_outside_openstack_virtual_network}}" }     
#    - { role: create-subnet, subnet_name: "{{1_subnet_name}}", subnet_address_in_cidr: "{{1_subnet_address_in_cidr}}" , 
#        dns_server_for_subnet: "{{1_dns_server_for_subnet}}", 
#        additional_routing_for_subnet: "{{1_additional_routing_for_subnet}}",
#        dhcp_to_be_enabled: "{{1_dhcp_to_be_enabled}}",
#        dhcp_ip_allocation_pool_start: "{{1_dhcp_ip_allocation_pool_start}}", 
#        dhcp_ip_allocation_pool_end: "{{1_dhcp_ip_allocation_pool_end}}", }
#    - { role: create-router, router_name: "{{  }}" ,  external_network_attched_with_router: "{{  }}" ,
#         external_subnet_n_gatewayIP: "{{  }}" }   
    - { role: create-nova-vm, vnm: "{{ db_servers.name }}", vimage: "{{ db_servers.image }}", 
        vkeyname: "{{ db_servers.keyname }}", vflavor: "{{ db_servers.flavor }}",
         vnetid: "{{ db_servers.netid }}", vsecurity_group: "{{ db_servers.security_group }}",
         vservers_role: "{{ db_servers.server_role}}" }
    - { role: create-nova-vm, vnm: "{{ app_servers.name }}", vimage: "{{ app_servers.image }}", 
        vkeyname: "{{ app_servers.keyname }}", vflavor: "{{ app_servers.flavor }}",
         vnetid: "{{ app_servers.netid }}", vsecurity_group: "{{ app_servers.security_group }}",
         vservers_role: "{{ app_servers.server_role}}" }
              

- hosts: groupofjustcreatedvm
  vars_files: 
    - define-deployment-variables.yml
  remote_user: cloudy
  become: true
  roles:
    - apply-common-config
    - { role: configure-db-mysql, when: "server_role == 'dbserver'" }
    - { role: configure-webserver-apache, when: "server_role == 'appserver'" }
  environment: "{{ proxy_env }}"
   
  tasks:
     - name: add the pre existing reverse proxy server name to inmemroy inventroy
       add_host: name=rpserver groups=groupofrpserver
            ansible_ssh_host={{reverseproxyserverip}}
            ansible_ssh_port={{reverseproxyserversshport}}
            hostname={{reverseproxyservername}}
         

- hosts: rpserver
  vars_files: 
    - define-deployment-variables.yml    
  become: true
  roles:
    - configure-reverse-proxy

    
 ###########################################################  
  
#  tasks:
#    - name: show the servers role 
#      debug: msg={{hostvars[inventory_hostname].server_role}}    
  